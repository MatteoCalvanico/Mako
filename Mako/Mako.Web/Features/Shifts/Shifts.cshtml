@model Mako.Web.Features.Shifts.ShiftsViewModel

@{
    ViewData["Title"] = "Shift";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-7 col-sm-10">
            @if (Model.Ships.Any())
            {
                <div class="d-flex justify-content-center mt-4">
                    @Html.Partial("_FilterBar", true)
                </div>

                <div class="row">
                    @foreach (var ship in Model.Ships)
                    {
                        var overlayClass = ship.DateArrival > DateTime.Now ? "overlay-card px-2 py-1 d-none d-md-block bg-warning" : "overlay-card px-2 py-1 d-md-block bg-danger text-white";
                        var overlayClassMobile = ship.DateArrival > DateTime.Now ? "overlay-card px-2 py-1 d-block d-md-none text-center bg-warning" : "overlay-card px-2 py-1 d-block d-md-none text-center bg-danger text-white";
                        var arrivalStatus = ship.DateArrival > DateTime.Now ? $"{(ship.DateArrival - DateTime.Now).Days} days left to arrival" : "Ship has arrived";

                        <div class="col-12 mb-4">
                            <div class="card card-custom mt-4 shadow" onclick="location.href='@Url.Action("Index", "ShiftDetails", new { shipName = ship.Name, shipDateArrival = ship.DateArrival })'">
                                <div class="card-body">
                                    <div class="@overlayClass">
                                        @arrivalStatus
                                    </div>
                                    <div class="@overlayClassMobile">
                                        @arrivalStatus
                                    </div>
                                    <h5 class="card-title fs-3"><b>@ship.Name</b> - <i>Time estimation: @(Math.Round(ship.TimeEstimation.TotalHours, 1)) hr</i></h5>
                                    <div class="d-flex justify-content-between">
                                        <p class="card-text fs-5 mb-0">
                                            <strong class="fs-4">Pier @ship.Pier</strong><br />
                                            Arrival: @ship.DateArrival.ToShortDateString() <br />
                                            Departure: @ship.DateDeparture.ToShortDateString()
                                        </p>
                                        <a href="@Url.Action("Index", "ShiftDetails", new { shipName = ship.Name, shipDateArrival = ship.DateArrival })" class="card-link mb-1">Cargo Manifest</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>No ships available.</p>
            }
        </div>
    </div>
</div>