@model Mako.Web.Areas.Worker.Models.RequestViewModel
@{
    ViewData["Title"] = "Manage shifts";
}

<header class="text-black text-center py-3">
    <h1 class="fw-bold">@ViewData["Title"]</h1>
</header>
<div class="container-fluid p-0 d-flex flex-column justify-content-center align-items-center" style="min-height: calc(100vh - 100px);">
    <main class="mt-4 mb-5 d-flex justify-content-center align-items-center flex-column">
        <div class="w-75">
            <h2 class="text-center">Ask for holidays</h2>
            <form asp-action="AddRequest" method="post">
                <div class="mb-3">
                    <textarea class="form-control" asp-for="Motivation" rows="3" placeholder="Write a message..."></textarea>
                    <span asp-validation-for="Motivation" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <div class="d-flex justify-content-center">
                        <div class="me-2 flex-fill">
                            <input type="text" class="text-center text-white form-control date-input" asp-for="StartDate" placeholder="Start Date" onfocus="(this.type='date')" onblur="(this.type='text')">
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>
                        <div class="ms-2 flex-fill">
                            <input type="text" class="text-center text-white form-control date-input" asp-for="EndDate" placeholder="End Date" onfocus="(this.type='date')" onblur="(this.type='text')">
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-primary btn-sm">Submit</button>
                </div>
            </form>
        </div>
    </main>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Apply theme based on user's preference or system preference
            const applyTheme = (theme) => {
                document.documentElement.setAttribute('data-theme', theme);
            };

            // Check localStorage for user's theme preference
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme) {
                applyTheme(savedTheme);
            } else {
                // If no preference is saved, use system preference
                const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)').matches;
                applyTheme(prefersDarkScheme ? 'dark' : 'light');
            }
        });
    </script>
}